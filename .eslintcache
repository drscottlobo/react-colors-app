[{"/Users/lobomacpro/Sites/colors-app-react-course/src/App.js":"1","/Users/lobomacpro/Sites/colors-app-react-course/src/ColorBox.js":"2","/Users/lobomacpro/Sites/colors-app-react-course/src/SeedColors.js":"3","/Users/lobomacpro/Sites/colors-app-react-course/src/Palette.js":"4","/Users/lobomacpro/Sites/colors-app-react-course/src/colorHelpers.js":"5","/Users/lobomacpro/Sites/colors-app-react-course/src/Navbar.js":"6","/Users/lobomacpro/Sites/colors-app-react-course/src/index.js":"7","/Users/lobomacpro/Sites/colors-app-react-course/src/PaletteList.js":"8"},{"size":848,"mtime":1613329054123,"results":"9","hashOfConfig":"10"},{"size":1319,"mtime":1612214587779,"results":"11","hashOfConfig":"10"},{"size":9797,"mtime":1611358940507,"results":"12","hashOfConfig":"10"},{"size":1111,"mtime":1613327295431,"results":"13","hashOfConfig":"10"},{"size":1173,"mtime":1613328820783,"results":"14","hashOfConfig":"10"},{"size":2561,"mtime":1613326892166,"results":"15","hashOfConfig":"10"},{"size":553,"mtime":1613327626569,"results":"16","hashOfConfig":"10"},{"size":479,"mtime":1613329195443,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2pgxfy",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lobomacpro/Sites/colors-app-react-course/src/App.js",[],"/Users/lobomacpro/Sites/colors-app-react-course/src/ColorBox.js",[],"/Users/lobomacpro/Sites/colors-app-react-course/src/SeedColors.js",["35"],"/Users/lobomacpro/Sites/colors-app-react-course/src/Palette.js",[],"/Users/lobomacpro/Sites/colors-app-react-course/src/colorHelpers.js",[],"/Users/lobomacpro/Sites/colors-app-react-course/src/Navbar.js",["36"],"import React, { Component } from 'react'\nimport Slider from 'rc-slider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport 'rc-slider/assets/index.css';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n   constructor(props){\n      super(props);\n      this.state = {\n         format: 'hex',\n         open: false\n      }\n   }\n   handleFormatChange = (e) => {\n      this.setState({ format: e.target.value, open: true }, () => {\n         this.props.handleChange(e.target.value);\n      })\n   }\n   closeSnackbar = () => {\n      this.setState({open: false})\n   }\n   render() {\n      return (\n         <header className=\"Navbar\">\n            <div className=\"logo\">\n               <a href=\"#\">ReactColorPicker</a>\n            </div>\n            <div className=\"slider-container\">\n               <span>Level: {this.props.level}</span>\n               <div className=\"slider\">\n                  <Slider \n                     defaultValue={this.props.level} \n                     min={100} \n                     max={900} \n                     step={100} \n                     onAfterChange={this.props.changeLevel}\n                  />\n               </div>\n            </div>\n            <div className=\"select-container\">\n               <Select value={this.state.format} onChange={this.handleFormatChange}>\n                  <MenuItem value=\"hex\">Hex - #ffffff</MenuItem>\n                  <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n                  <MenuItem value=\"rgba\">RGBA - rgba(255,255,255, 1.0)</MenuItem>\n               </Select>\n            </div>\n           <Snackbar \n               anchorOrigin={{vertical: 'bottom', horizontal: 'left'}} \n               open={this.state.open} \n               autoHideDuration={3000}\n               message={<span id=\"message-id\">Format Changed To {this.state.format.toUpperCase()}</span>}\n               ContentProps={{\"aria-describedby\": \"message-id\"}}\n               onClose={this.closeSnackbar}\n               action={[\n                  <IconButton \n                     onClick={this.closeSnackbar} \n                     color=\"inherit\"\n                     key=\"close\"\n                     aria-label=\"close\"\n                  >\n                     <CloseIcon />\n                  </IconButton>\n               ]}\n            />\n         </header>\n      )\n   }\n}\n\nexport default Navbar","/Users/lobomacpro/Sites/colors-app-react-course/src/index.js",[],"/Users/lobomacpro/Sites/colors-app-react-course/src/PaletteList.js",[],{"ruleId":"37","severity":1,"message":"38","line":1,"column":1,"nodeType":"39","endLine":244,"endColumn":3},{"ruleId":"40","severity":1,"message":"41","line":31,"column":16,"nodeType":"42","endLine":31,"endColumn":28},"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]